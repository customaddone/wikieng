version: 2
jobs:
  #テストを行うworkflow
  test:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.3-node-browsers
        environment:
          APP_ENV: circleci
          APP_DEBUG: true
          DB_CONNECTION: sqlite

      # duskテスト用
      - image: circleci/node:7.10-browsers

      - image: selenium/standalone-chrome

    environment:
      - APP_DEBUG: true
      - APP_ENV: testing
      - APP_KEY: base64:Rha6fhgYifnvVBnwm81FCal18ULvEgiMnqpLLwlvyKI=
      - APP_URL: http://localhost:8888

    steps:
      - checkout
      - setup_remote_docker

      - run: sudo apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
      - run: sudo docker-php-ext-install zip
      - run: touch database/database_test.sqlite
      - run: composer install -n --prefer-dist
      - run:
          name: install-npm
          command: npm install
      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor
      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
            - node-v1-
      - run: yarn install
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules

      #unit and browser test
      - run:
          name: run unit test
          command: |
            php artisan migrate
            ./vendor/bin/phpunit
      - run:
          name: run selenium　
          command: docker run -d -p 4444:4444 selenium/standalone-chrome
      - run:
          name: run browser
          command: php artisan serve
          background: true
      - run:
          name: run dusk
          command: |
            composer require guzzlehttp/guzzle
            APP_URL=http://127.0.0.1:8000 php artisan dusk
  deploy:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.3-node-browsers
      - image: docker:19.03
    steps:
      - checkout
      - setup_remote_docker

      - run:
          name: install aws cli
          command: |
            curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
            unzip awscli-bundle.zip
            sudo ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws
      - run:
          name: build image
          command: |
            $(aws ecr get-login --no-include-email --region ap-northeast-1)
            docker build -f ./docker/php/Dockerfile -t ${ECR_DOMAIN_APP}:$CIRCLE_SHA1 -t ${ECR_DOMAIN_APP}:latest .
            docker build -f ./docker/nginx/Dockerfile -t ${ECR_DOMAIN_NGINX}:$CIRCLE_SHA1 -t ${ECR_DOMAIN_NGINX}:latest  .
      - run:
          name: Push docker image
          command: |
            docker push ${ECR_DOMAIN_APP}:$CIRCLE_SHA1
            docker push ${ECR_DOMAIN_APP}:latest
            docker push ${ECR_DOMAIN_NGINX}:$CIRCLE_SHA1
            docker push ${ECR_DOMAIN_NGINX}:latest
      - run:
          name: download jq # JSONファイルを簡単に操作するためにjqをインストール
          command: |
            wget https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
            mv jq-linux64 jq
      - run:
          name: deploy # 新しいタスク定義ファイルを作成し、ECSに反映させる
          command: |
            aws ecs describe-task-definition --task-definition example | jq '.taskDefinition | { containerDefinitions: .containerDefinitions }' > task_definition.json
            aws ecs register-task-definition --family example --cli-input-json file://task_definition.json
            aws ecs update-service --cluster sample-ecs-cluster --service example --task-definition example
      #- run:
          #name: migration # マイグレーションタスクを実行
          #command: aws ecs run-task --cluster sample-ecs-cluster --task-definition sample-app-migrate

workflows:
  version: 2
  test:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master
